menuflag=0
while menuflag==0:
    print("===================================================")
    print("歡迎使用政大生活助手，請輸入數字來決定你要用什麼功能")
    print("輸入1來得知現在有甚麼餐廳營業中")
    print("輸入2來得知下一班校內公車何時發車")
    print("輸入3來得知108年度的行事曆和離今天還有幾天")
    print("輸入4來記帳")
    print("輸入5來得知今天運動總共消耗了多少卡路里")
    print("輸入6來終止程式")
    menuselect = str(input())


    
    if menuselect == "1":
        Fast_Food=[["麥當勞","一",600,2400,0,0,"二",600,2400,0,0,"三",600,2400,0,0,"四",600,2400,0,0,"五",600,2400,0,0,"六",600,2400,0,0,"日",600,2400,0,0],
                   ["摩斯漢堡","一",600,2400,0,0,"二",600,2400,0,0,"三",600,2400,0,0,"四",600,2400,0,0,"五",600,2400,0,0,"六",600,2400,0,0,"日",600,2400,0,0],
                   ["派克雞排","一",1100,2200,0,0,"二",1100,2200,0,0,"三",1100,2200,0,0,"四",1100,2200,0,0,"五",1100,2200,0,0,"六",0,0,0,0,"日",0,0,0,0],
                   ["政大烤場","一",1600,2400,0,0,"二",1600,2400,0,0,"三",1600,2400,0,0,"四",1600,2400,0,0,"五",1600,2400,0,0,"六",1600,2400,0,0,"日",0,0,0,0]
                   ]
        Taiwanese_food=[["八方雲集","一",1100,2130,0,0,"二",1100,2130,0,0,"三",1100,2130,0,0,"四",1100,2130,0,0,"五",1100,2130,0,0,"六",0,0,0,0,"日",1100,2130,0,0],
                        ["京華小館","一",1110,1930,0,0,"二",1110,1930,0,0,"三",1110,1930,0,0,"四",1110,1930,0,0,"五",1110,1930,0,0,"六",1110,1930,0,0,"日",0,0,0,0],
                        ["津喜甜不辣","一",1100,2030,0,0,"二",1100,2030,0,0,"三",1100,2030,0,0,"四",1100,2030,0,0,"五",1100,2030,0,0,"六",1100,2030,0,0,"日",1100,2030,0,0],
                        ["敏盅小吃店","一",1145,1400,1715,2000,"二",1145,1400,1715,2000,"三",1145,1400,1715,2000,"四",1145,1400,1715,2000,"五",1145,1400,1715,2000,"六",1145,1400,1715,2000,"日",1145,1400,1715,2000],
                        ["大胖小吃","一",1100,1400,1600,2400,"二",1100,1400,1600,2400,"三",1100,1400,1600,2400,"四",1100,1400,1600,2400,"五",1100,1400,1600,2400,"六",1100,1400,1600,2400,"日",0,0,0,0],
                        ["德合香","一",630,1230,0,0,"二",630,1230,0,0,"三",630,1230,0,0,"四",630,1230,0,0,"五",630,1230,0,0,"六",630,1230,0,0,"日",630,1230,0,0],
                        ["布朗其優先早餐店","一",530,1200,0,0,"二",530,1200,0,0,"三",530,1200,0,0,"四",530,1200,0,0,"五",530,1200,0,0,"六",530,1200,0,0,"日",530,1200,0,0],
                        ["古早味蛋餅飯糰","一",600,1100,0,0,"二",600,1100,0,0,"三",600,1100,0,0,"四",600,1100,0,0,"五",600,1100,0,0,"六",600,1100,0,0,"日",0,0,0,0],
                        ["口福豆漿店","一",0,0,0,0,"二",600,1100,0,0,"三",600,1100,0,0,"四",600,1100,0,0,"五",600,1100,0,0,"六",600,1100,0,0,"日",600,1100,0,0],
                        ["左撇子","一",1100,1400,1700,2030,"二",1100,1400,1700,2030,"三",1100,1400,1700,2030,"四",1100,1400,1700,2030,"五",1100,1400,1700,2030,"六",1100,1400,1700,2030,"日",1100,1400,1700,2030],
                        ["吃的小館","一",1100,2000,0,0,"二",1100,2000,0,0,"三",1100,2000,0,0,"四",1100,2000,0,0,"五",1100,2000,0,0,"六",1100,2000,0,0,"日",1100,2000,0,0],
                        ["羹大王","一",900,2000,0,0,"二",900,2000,0,0,"三",900,2000,0,0,"四",900,2000,0,0,"五",0,0,0,0,"六",900,2000,0,0,"日",900,2000,0,0],
                        ["秀食屋","一",1200,2000,0,0,"二",1200,2000,0,0,"三",1200,2000,0,0,"四",1200,2000,0,0,"五",1200,2000,0,0,"六",0,0,0,0,"日",0,0,0,0]
                        ]
        Coffee_Dessert=[["Prowin Paris Café","一",800,2000,0,0,"二",800,2000,0,0,"三",800,2000,0,0,"四",0,0,0,0,"五",800,2000,0,0,"六",800,1900,0,0,"日",800,1900,0,0],
                        ["咖啡大亨","一",800,1900,0,0,"二",800,1900,0,0,"三",800,1900,0,0,"四",800,1900,0,0,"五",0,0,0,0,"六",800,1900,0,0,"日",800,1900,0,0],
                        ["熊在北到南","一",1300,2200,0,0,"二",0,0,0,0,"三",1300,2200,0,0,"四",1300,2200,0,0,"五",1300,2200,0,0,"六",1300,2200,0,0,"日",1300,1800,0,0],
                        ["Apt. Cafe","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,"四",1100,2100,0,0,"五",1100,2100,0,0,"六",1100,2100,0,0,"日",1100,2100,0,0],
                        ["Starbucks","一",700,2100,0,0,"二",700,2100,0,0,"三",700,2100,0,0,"四",700,2100,0,0,"五",700,2100,0,0,"六",700,2100,0,0,"日",700,2100,0,0],
                        ["路一莎","一",730,2000,0,0,"二",730,2000,0,0,"三",730,2000,0,0,"四",730,2000,0,0,"五",730,2000,0,0,"六",730,2000,0,0,"日",730,2000,0,0],
                        ["5 Café","一",1300,2000,0,0,"二",1300,2000,0,0,"三",1300,2000,0,0,"四",1300,2000,0,0,"五",1300,2000,0,0,"六",0,0,0,0,"日",1200,2000,0,0],
                        ["麵包大亨烘培工作室","一",800,2230,0,0,"二",800,2230,0,0,"三",800,2230,0,0,"四",800,2230,0,0,"五",800,2230,0,0,"六",800,2230,0,0,"日",800,2230,0,0,],
                        ["明池豆花","一",1130,2300,0,0,"二",1130,2300,0,0,"三",1130,2300,0,0,"四",1130,2300,0,0,"五",1130,2300,0,0,"六",1130,2300,0,0,"日",1130,2300,0,0],
                        ["可麗餅","一",0,0,0,0,"二",1100,1400,1500,2000,"三",1100,1400,1500,2000,"四",1100,1400,1500,2000,"五",1100,1400,1500,2000,"六",1100,1400,1500,2000,"日",1100,1400,1500,2000],
                        ["小木屋鬆餅","一",1000,2000,0,0,"二",1000,2000,0,0,"三",1000,2000,0,0,"四",1000,2000,0,0,"五",1000,2000,0,0,"六",1000,2000,0,0,"日",1000,2000,0,0,],
                        ["butterfly café","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,"四",1100,2100,0,0,"五",1100,2100,0,0,"六",1100,2100,0,0,"日",1100,2100,0,0]
                        ]
        Cantonese_Chinese=[["同洋燒臘","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,0,0,"四",1100,2100,0,0,0,0,"五",1100,2100,0,0,0,0,"六",1100,2100,0,0,0,0,"日",0,0,0,0],
                           ["四川飯館","一",0,0,0,0,"二",1100,1400,1700,2000,"三",1100,1400,1700,2000,"四",1100,1400,1700,2000,"五",1100,1400,1700,2000,"六",1100,1400,1700,2000,"日",1100,1400,1700,2000],
                           ["鮮刷刷鍋","一",1130,2230,0,0,"二",1130,2230,0,0,"三",1130,2230,0,0,"四",1130,2230,0,0,"五",1130,2230,0,0,"六",1130,2230,0,0,"日",1130,2230,0,0],
                           ["京城滷味","一",1100,1700,0,0,"二",1100,1700,0,0,"三",1100,1700,0,0,"四",1100,1700,0,0,"五",1100,1700,0,0,"六",1100,1700,0,0,"日",1100,1700,0,0],
                           ["喜記港式燒臘","一",1100,2000,0,0,"二",1100,2000,0,0,"三",1100,2000,0,0,"四",1100,2000,0,0,"五",1100,2000,0,0,"六",1100,2000,0,0,"日",1100,2000,0,0]
                           ]
        Japanese_Korean=[["加賀日式料理","一",1100,1400,1700,2100,"二",1100,1400,1700,2100,"三",1100,1400,1700,2100,"四",1100,1400,1700,2100,"五",1100,1400,1700,2100,"六",1100,1400,1700,2100,"日",1100,1400,1700,2100],
                         ["阿里郎韓國小吃","一",1100,1400,1700,2100,"二",1100,1400,1700,2100,"三",1100,1400,1700,2100,"四",1100,1400,1700,2100,"五",1100,1400,1700,2100,"六",1100,1400,1700,2100,"日",1100,1400,1700,2100],
                         ["樂山食堂","一",1100,1400,1700,2000,"二",1100,1400,1700,2000,"三",1100,1400,1700,2000,"四",1100,1400,1700,2000,"五",1100,1400,1700,2000,"六",1100,1400,1700,2000,"日",0,0,0,0],
                         ["湯饌","一",1100,1430,1700,2030,"二",1100,1430,1700,2030,"三",1100,1430,1700,2030,"四",1100,1430,1700,2030,"五",1100,1430,1700,2030,"六",1100,1430,1700,2030,"日",1100,1430,1700,2030],
                         ["吉野家","一",800,2030,0,0,"二",800,2030,0,0,"三",800,2030,0,0,"四",800,2030,0,0,"五",800,2030,0,0,"六",800,2030,0,0,"日",800,2030,0,0],
                         ["高句麗","一",1100,1400,1630,2100,"二",1100,1400,1630,2100,"三",1100,1400,1630,2100,"四",1100,1400,1630,2100,"五",1100,1400,1630,2100,"六",1100,1400,1630,2100,"日",1100,1400,1630,2100],
                         ["韓國朴媽媽美食","一",1100,1400,1630,2100,"二",1100,1400,1630,2100,"三",1100,1400,1630,2100,"四",1100,1400,1630,2100,"五",1100,1400,1630,2100,"六",1100,1400,1630,2100,"日",1100,1400,1630,2100],
                         ["金鮨日式料理","一",1100,1600,1700,2040,"二",1100,1600,1700,2040,"三",1100,1600,1700,2040,"四",1100,1600,1700,2040,"五",1100,1600,1700,2040,"六",1100,1600,1700,2040,"日",1100,1600,1700,2040],
                         ["東京小城","一",1100,1400,1700,2030,"二",1100,1400,1700,2030,"三",1100,1400,1700,2030,"四",1100,1400,1700,2030,"五",1100,1400,1700,2030,"六",1100,1400,1700,2030,"日",1100,1400,1700,2030]
                         ]
        SouthEast_Asia=[["小曼谷滇緬料理","一",1130,1430,1700,2130,"二",1130,1430,1700,2130,"三",0,0,0,0,"四",1130,1430,1700,2130,"五",1130,1430,1700,2130,"六",1130,1430,1700,2130,"日",1130,1430,1700,2130],
                        ["美香味快餐","一",1100,2230,0,0,"二",1100,2230,0,0,"三",1100,2230,0,0,"四",1100,2230,0,0,"五",1100,2230,0,0,"六",1100,2230,0,0,"日",1100,2230,0,0],
                        ["啵啵恰恰","一",1100,2000,0,0,"二",1100,2000,0,0,"三",1100,2000,0,0,"四",1100,2000,0,0,"五",1100,2000,0,0,"六",0,0,0,0,"日",1100,2000,0,0],
                        ["滇味廚房","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,"四",1100,2100,0,0,"五",1100,2100,0,0,"六",1100,2100,0,0,"日",1100,2100,0,0]
                        ]
        Noodle=[["呷麵騎士","一",1130,1430,1730,2030,"二",1130,1430,1730,2030,"三",1130,1430,1730,2030,"四",1130,1430,1730,2030,"五",1130,1430,1730,2030,"六",0,0,0,0,"日",1130,1430,1730,2030],
                ["My 麵屋","一",1100,2000,0,0,"二",1100,2000,0,0,"三",1100,2000,0,0,"四",1100,2000,0,0,"五",1100,2000,0,0,"六",1100,2000,0,0,"日",0,0,0,0],
                ["大鬍子老爹麵店","一",1130,1430,1630,1930,"二",1130,1430,1630,1930,"三",1130,1430,1630,1930,"四",1130,1430,1630,1930,"五",1130,1430,1630,1930,"六",0,0,0,0,"日",1130,1430,1630,1930],
                ["私房麵","一",1100,1430,1700,2030,"二",1100,1430,1700,2030,"三",1100,1430,1700,2030,"四",1100,1430,1700,2030,"五",1100,1430,1700,2030,"六",1100,1430,1700,2030,"日",1100,1430,1700,2030],
                ["阿義師牛肉麵","一",0,0,0,0,"二",1130,1400,1700,2030,"三",1130,1400,1700,2030,"四",1130,1400,1700,2030,"五",1130,1400,1700,2030,"六",1130,1400,1700,2030,"日",1130,1400,1700,2030]
                ]
        Western=[["Arty Burger","一",700,1500,0,0,"二",0,0,0,0,"三",700,1500,0,0,"四",700,1500,0,0,"五",700,1500,0,0,"六",700,1500,0,0,"日",700,1500,0,0],
                 ["里克德義廚房","一",0,0,0,0,"二",1130,1500,1700,2100,"三",1130,1500,1700,2100,"四",1130,1500,1700,2100,"五",1130,1500,1700,2100,"六",1130,1500,1700,2100,"日",1130,1500,1700,2100],
                 ["世界大同","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,"四",1100,2100,0,0,"五",1100,2100,0,0,"六",1100,2100,0,0,"日",1100,2100,0,0],
                 ["米塔義式廚房","一",1100,2200,0,0,"二",1100,2200,0,0,"三",1100,2200,0,0,"四",1100,2200,0,0,"五",1100,2200,0,0,"六",1100,2200,0,0,"日",1100,2200,0,0],
                 ["舒曼六號","一",1100,2200,0,0,"二",1100,2200,0,0,"三",1100,2200,0,0,"四",1100,2200,0,0,"五",1100,2200,0,0,"六",1100,2200,0,0,"日",1100,2200,0,0],
                 ["Urban Monster","一",1100,2100,0,0,"二",1100,2100,0,0,"三",1100,2100,0,0,"四",1100,2100,0,0,"五",1100,2130,0,0,"六",1100,2130,0,0,"日",1100,2100,0,0],
                 ["Juicy Bun Burger","一",1130,2200,0,0,"二",1130,2200,0,0,"三",1130,2200,0,0,"四",1130,2200,0,0,"五",1130,2200,0,0,"六",1030,2200,0,0,"日",1030,2200,0,0],
                 ["The Hill Hamburger Restaurant","一",1000,1430,1630,2000,"二",1000,1430,1630,2000,"三",1000,1430,1630,2000,"四",1000,1430,1630,2000,"五",1000,1430,1630,2000,"六",1000,1430,1630,2000,"日",1000,1430,1630,2000]
                 ]
        Comprehensive=[["四五大街","一",1100,1500,1630,2030,"二",1100,1500,1630,2030,"三",1100,1500,1630,2030,"四",1100,1500,1630,2030,"五",1100,1500,1630,2030,"六",0,0,0,0,"日",1100,1500,1630,2030],
                       ["好啤氣","一",1630,2400,0,0,"二",1630,2400,0,0,"三",1630,2400,0,0,"四",1630,2400,0,0,"五",1630,2400,0,0,"六",1630,2400,0,0,"日",0,0,0,0]
                       ]
        from datetime import *
        now=datetime.now()
        standardized_time=int(str(now.hour)+str(now.minute))#將現在時間組成與上面資料相似的數字
        if 0<=now.minute<10:
                standardized_time=int(str(now.hour)+"0"+str(now.minute))
        Today=datetime.today()
        week_today=(list(Today.ctime()).pop(0)+
        list(Today.ctime()).pop(1)+list(Today.ctime()).pop(2))#找出今天星期幾
        Dict_week={"Mon":"一","Tue":"二","Wed":"三","Thu":"四","Fri":"五","Sat":"六","Sun":"日"}
        week_chinese=Dict_week.get(week_today)#將英文日期轉為中文
        detail_count=0 #用來數詳細資料在第幾個索引位置值
        restaurant_type=0
        fastfoodrestaurant=[]#為每一個restaurant做一個空串列
        taiwaneserestaurant=[]
        coffeerestaurant=[]
        cantoneserestaurant=[]
        japaneserestaurant=[]
        southeastrestaurant=[]
        noodlerestaurant=[]
        westernrestaurant=[]
        comprehensiverestaurant=[]
        #print(week_chinese)
        #print(standardized_time)
        total_types=[Fast_Food,Taiwanese_food,Coffee_Dessert,Cantonese_Chinese,Japanese_Korean,
                     SouthEast_Asia,Noodle,Western,Comprehensive]

        for k in total_types:
                for i in k:#i元素為不同餐廳
                        for j in i:#j元素為餐廳的詳細資料
                                if week_chinese==j: #用索引位置值比較時間大小，若在範圍內就將餐廳名加入串列
                                        if i[detail_count+1]<=standardized_time<=i[detail_count+2] or i[detail_count+3]<=standardized_time<=i[detail_count+4]:
                                                if restaurant_type==0: #確認要加在哪個餐廳類型串列中
                                                        fastfoodrestaurant.append(i[0])
                                                if restaurant_type==1: 
                                                        taiwaneserestaurant.append(i[0])
                                                if restaurant_type==2: 
                                                        coffeerestaurant.append(i[0])
                                                if restaurant_type==3: 
                                                        cantoneserestaurant.append(i[0])
                                                if restaurant_type==4: 
                                                        japaneserestaurant.append(i[0])
                                                if restaurant_type==5: 
                                                        southeastrestaurant.append(i[0])
                                                if restaurant_type==6: 
                                                        noodlerestaurant.append(i[0])
                                                if restaurant_type==7: 
                                                        westernrestaurant.append(i[0])
                                                if restaurant_type==8: 
                                                        comprehensiverestaurant.append(i[0])
                                detail_count+=1 #數在第幾個索引位置值
                        detail_count=0 #把詳細資料索引位置值歸零
                restaurant_type+=1

        count_fastfood=0 #紀錄有幾家
        count_taiwanese=0
        count_coffee=0
        count_cantonnese=0
        count_japanese=0
        count_south=0
        count_noodle=0
        count_western=0
        count_comprehensive=0
        print("按照你的裝置上的時間，目前有在營業的餐廳如下表")
        print("速食餐廳有:")
        for i in fastfoodrestaurant:
                print("          {0:10s}".format(str(i)))
                count_fastfood+=1
        print("台式餐廳有:")
        for i in taiwaneserestaurant:
                print("          {0:10s}".format(str(i)))
                count_taiwanese+=1
        print("咖啡及點心店有:")
        for i in coffeerestaurant:
                print("          {0:10s}".format(str(i)))
                count_coffee+=1
        print("中式及廣式餐廳有:")
        for i in cantoneserestaurant:
                print("          {0:10s}".format(str(i)))
                count_cantonnese+=1
        print("日式及韓式餐廳有:")
        for i in japaneserestaurant:
                print("          {0:10s}".format(str(i)))
                count_japanese+=1
        print("東南亞風味餐廳有:")
        for i in southeastrestaurant:
                print("          {0:10s}".format(str(i)))
                count_south+=1
        print("麵食餐廳有:")
        for i in noodlerestaurant:
                print("          {0:10s}".format(str(i)))
                count_noodle+=1
        print("西式餐廳有:")
        for i in westernrestaurant:
                print("          {0:10s}".format(str(i)))
                count_western+=1
        print("綜合性餐廳有:")
        for i in comprehensiverestaurant:
                print("          {0:10s}".format(str(i)))
                count_comprehensive+=1
        print("")

        import matplotlib.pyplot as plt; plt.rcdefaults()
        import numpy as np
        import matplotlib.pyplot as plt

        types = ('Fastfood', 'Tawanese', 'Coffee & Dessert', 'Chinese & Cantonese', 'Japanese & Korean', 'Southeast Asia', 'Noodle', 'Western', 'Comprehensive')
        y_pos = np.arange(len(types))
        frequency = [count_fastfood,count_taiwanese,count_coffee,count_cantonnese,count_japanese,count_south,count_noodle,count_western,count_comprehensive]

        plt.barh(y_pos, frequency, align='center', alpha=0.5)
        plt.yticks(y_pos, types)
        plt.xlabel('frequency')
        plt.title('restaurant type frequency distribution')

        plt.show()





                        
                                
                        

                
                










        
    elif menuselect == "2":
        #輸入現在時間輸出政大假日校內公車幾分鐘後發車
        #------------------改變的部分----------------------------
        flag1 =0
        flag2 =0
        #設立flag，這是用來辨別輸入的資料能不能繼續往下做
        hour=str(input("請問現在幾點"))

        minute=str(input("請問現在幾分"))
        #我先讓輸入的格式為str，這樣可以避免使用者輸入文字然後整個系統爆炸
        if hour !="0" and hour !="1" and hour!="2" and hour!="3" and hour!="4" and hour!="5" and hour!="6" and hour!="7" and hour!="8" and hour!="9" and hour!="10"  and hour!="11" and hour!="12" and hour!="13" and hour!="14"and hour!="15" and hour!="16" and hour!="17"and hour!="18" and hour!="19" and hour!="20" and hour!="21" and hour!="22" and hour!="23" and hour!="24" :
            print("小時輸入錯誤，可能是因為輸入了1~24以外的值，或是小數點或是文字")
        else:
            flag1 = 1
        if minute !="1" and minute !="2" and minute !="3" and minute !="4" and minute !="5" and minute !="6" and minute !="7" and minute !="8" and minute !="9" and minute !="10" and minute !="11" and minute !="12" and minute !="13" and minute !="14" and minute !="15" and minute !="16" and minute !="17" and minute !="18" and minute !="19" and minute !="20" and minute !="21" and minute !="22" and minute !="23" and minute !="24" and minute !="25" and minute !="26" and minute !="27" and minute !="28" and minute !="29" and minute !="30" and minute !="31" and minute !="32" and minute !="33" and minute !="34" and minute !="35" and minute !="36" and minute !="37" and minute !="38" and minute !="39" and minute !="40" and minute !="41" and minute !="42" and minute !="43" and minute !="44" and minute !="45" and minute !="46" and minute !="47" and minute !="48" and minute !="49" and minute !="50" and minute !="51" and minute !="52" and minute !="53" and minute !="54" and minute !="55" and minute !="56" and minute !="57" and minute !="58" and minute !="59" and minute !="60" and minute !="0":
            print("分鐘輸入錯誤，可能是因為輸入了0~60以外的值，或是小數點或是文字")
        else:
            flag2 = 2
        #上面的程式碼是拿來辨別輸入的值究竟合不合理，如果合理就改變flag的值，表示「這邊過關囉」，兩個flag都要改過才能繼續向下

        if flag1 == 1 and flag2 == 2   :
        #------------------改變的部分----------------------------
            hour = int (hour)
            minute = int (minute)
            if hour<7 or hour>22 :       #8點到23點有車
                print("請重新輸入，本日23點~到隔日8點是沒有車的")
            elif minute<0 or minute>59: #只能輸入0-59
                print("請重新輸入")
            elif hour==7:               #7點，8點才有車
                print(60-minute,"分鐘後有車")
            elif hour==22:              #22點例外,15,30,40,60分有車
                if minute<15:
                    print(15-minute,"分鐘後有車")
                elif minute<30:
                    print(30-minute,"分鐘後有車")

                elif minute<45:
                    print(45-minute,"分鐘後有車")
                else:
                    print(60-minute,"分鐘後有車")
            elif hour==11 or hour==17:  #11點和17點例外,20,60分有車
                if minute<20:
                    print(20-minute,"分鐘後有車")
                else:
                    print(60-minute,"分鐘後有車")
            else:                       #其餘20,40,60分有車
                if minute<20:       
                    print(20-minute,"分鐘後有車")
                elif minute<40:
                    print(40-minute,"分鐘後有車")
                else:
                    print(60-minute,"分鐘後有車")
            print('')


                   







    elif menuselect == "3":
        
        from datetime import*
        print('馬上就要到108學年了! 想知道現在距離108學年的各種活動還剩下幾天嗎? 輸入要查詢的事件吧!')
        print('108學年的事件有:\n')#這裡想要整齊列出所有的事件

        print('學年開始/第一學期第1階段選課初選/第一學期第2階段選課初選/新生訓練/開學/第一學期選課加退選/中秋節/繳交學雜費截止日/第一學期加簽暨退課/弱勢學生助學金申請/防災日/10.11 調整上班日/國慶日/國慶調整放假/第一學期三分之一退費基準日/第一學期繳交學分費暨語言設備使用費截止日/第一學期期中考/第一學期申請棄修開始日/第一學期申請棄修、學士班提前畢業申請截止日/第一學期三分之二退費基準日/校園馬拉松/碩士班轉系所申請/第一學期學雜費減免申請/文化盃系際合唱比賽/第一學期輔系、雙主修放棄修習截止日/開國紀念日/第一學期申請休學、學位考試截止日/第一學期期末考/寒假開始/第二學期第1 階段選課初選/春節調整放假/農曆除夕/農曆春節/第一學期學期結束/第二學期學期開始/第二學期第2 階段選課初選/1.23 調整上班日/第二學期開始上課/就學貸款申請及減免換單/繳交學雜費截止日/第二學期選課加退選/第二學期加簽暨退課/和平紀念日/學士班辦理轉系申請/校園徵才月 第二學期三分之一退費基準日/兒童清明補假/兒童節、民族掃墓節/學士班辦理109 學年住宿申請/第二學期繳交學分費暨語言設備使用費截止日/第二學期期中考/第二學期申請棄修開始日/暑修上期登記/第二學期申請棄修、學士班提前畢業申請截止日/學士班上網申請修習輔系或雙主修/全校校友返校日(停課)/校慶運動會(停課)/校慶/第二學期輔系、雙主修放棄修習截止日/第二學期學雜費減免申請/畢業典禮/第二學期申請休學、學位考試截止日/第二學期期末考/暑假開始/端午節\n')
        print('bonus 也可以查:107-2 期末考週/107-2畢業典禮')
        print('請輸入要查詢的事件，若要結束請輸入結束')
        today=date.today()
        print ("今天日期:"+str(today))
        while True:
              abc=input("\n請輸入要查詢的事項")
              event={'107-2畢業典禮':date(2019,6,15),'學年開始':date(2019,8,1),'第一學期第1階段選課初選':date(2019,8,19),'第一學期第2階段選課初選':date(2019,8,26),'新生訓練':date(2019,9,4),                  '開學':date(2019,9,9),'第一學期選課加退選':date(2019,9,9),'中秋節':date(2019,9,13),                  '繳交學雜費截止日':date(2019,9,16),'第一學期加簽暨退課':date(2019,9,17),'弱勢學生助學金申請':date(2019,9,17),                  '防災日':date(2019,9,20),'10/11 調整上班日':date(2019,10,5),'國慶日':date(2019,10,10),                  '國慶調整放假':date(2019,10,11),'第一學期 1/3 退費基準日':date(2019,10,18),                  '第一學期繳交學分費暨語言設備使用費截止日':date(2019,11,1),'第一學期期中考':date(2019,11,4),                  '第一學期申請棄修開始日':date(2019,11,11),'第一學期申請棄修、學士班提前畢業申請截止日':date(2019,11,22),                  '第一學期 2/3 退費基準日':date(2019,11,29),'校園馬拉松':date(2019,12,1),'碩士班轉系所申請':date(2019,12,1),                  '第一學期學雜費減免申請':date(2019,12,2),'文化盃系際合唱比賽':date(2019,12,7),                  '第一學期輔系、雙主修放棄修習截止日':date(2019,12,30),'開國紀念日':date(2020,1,1),                  '第一學期申請休學、學位考試截止日':date(2020,1,2),'第一學期期末考':date(2020,1,3),'寒假開始':date(2020,1,10),                  '第二學期第1 階段選課初選':date(2020,1,13),'春節調整放假':date(2020,1,23),                  '農曆除夕':date(2020,1,24),'農曆春節':date(2020,1,25),'第一學期學期結束':date(2020,1,31),                  '第二學期學期開始':date(2020,2,1),'第二學期第2 階段選課初選':date(2020,2,3),'1/23 調整上班日':date(2020,2,15),                  '第二學期開始上課':date(2020,2,17),'就學貸款申請及減免換單':date(2020,2,17),'繳交學雜費截止日':date(2020,2,21),                  '第二學期選課加退選':date(2020,2,17),'第二學期加簽暨退課':date(2020,2,25),'和平紀念日':date(2020,2,28),'學士班辦理轉系申請':date(2020,3,9),                  '校園徵才月':date(2020,3,9),'第二學期 1/3 退費基準日':date(2020,3,27),'兒童清明補假':date(2020,4,2),'兒童節、民族掃墓節':date(2020,4,3),                  '學士班辦理109 學年住宿申請':date(2020,4,6),'第二學期繳交學分費暨語言設備使用費截止日':date(2020,4,10),                  '第二學期期中考':date(2020,4,13),'第二學期申請棄修開始日':date(2020,4,20),'暑修上期登記':date(2020,4,29),                  '第二學期申請棄修、學士班提前畢業申請截止日':date(2020,5,1),'學士班上網申請修習輔系或雙主修':date(2020,5,11),'全校校友返校日(停課)':date(2020,5,16),                  '校慶運動會(停課)':date(2020,5,19),'校慶':date(2020,5,20),'第二學期輔系、雙主修放棄修習截止日':date(2020,6,1),'第二學期學雜費減免申請':date(2020,6,1),                  '畢業典禮':date(2020,6,6),'第二學期申請休學、學位考試截止日':date(2020,6,11),'第二學期期末考':date(2020,6,12),'暑假開始':date(2020,6,19),                  '端午節':date(2020,6,25),'107-2 期末考週':date(2019,6,21)}#建立字典

              event2={'107-2畢業典禮':timedelta(days=1),'學年開始':timedelta(days=1),'第一學期第1階段選課初選':timedelta(days=3),'第一學期第2階段選課初選':timedelta(days=3),'新生訓練':timedelta(days=2),'開學':timedelta(days=1),              '第一學期選課加退選':timedelta(days=8),'中秋節':timedelta(days=1),'繳交學雜費截止日':timedelta(days=1),'第一學期加簽暨退課':timedelta(days=8),'弱勢學生助學金申請':timedelta(days=7),              '防災日':timedelta(days=1),'10/11 調整上班日':timedelta(days=1),'國慶日':timedelta(days=1),'國慶調整放假':timedelta(days=1),'第一學期 1/3 退費基準日':timedelta(days=1),              '第一學期繳交學分費暨語言設備使用費截止日':timedelta(days=1),'第一學期期中考':timedelta(days=5),'第一學期申請棄修開始日':timedelta(days=1),              '第一學期申請棄修、學士班提前畢業申請截止日':timedelta(days=1),'第一學期 2/3 退費基準日':timedelta(days=1),'校園馬拉松':timedelta(days=1),'碩士班轉系所申請':timedelta(days=31),              '第一學期學雜費減免申請':timedelta(days=5),'文化盃系際合唱比賽':timedelta(days=1),'第一學期輔系、雙主修放棄修習截止日':timedelta(days=1),'開國紀念日':timedelta(days=1),              '第一學期申請休學、學位考試截止日':timedelta(days=1),'第一學期期末考':timedelta(days=7),'寒假開始':timedelta(days=1),'第二學期第1 階段選課初選':timedelta(days=3),              '春節調整放假':timedelta(days=1),'農曆除夕':timedelta(days=1),'農曆春節':timedelta(days=5),'第一學期學期結束':timedelta(days=1),              '第二學期學期開始':timedelta(days=1),'第二學期第2 階段選課初選':timedelta(days=3),'1/23 調整上班日':timedelta(days=1),'第二學期開始上課':timedelta(days=1),              '就學貸款申請及減免換':timedelta(days=5),'繳交學雜費截止日':timedelta(days=1),'第二學期選課加退選':timedelta(days=8),'第二學期加簽暨退課':timedelta(days=8),              '和平紀念日':timedelta(days=1),'學士班辦理轉系申請':timedelta(days=5),'校園徵才月':timedelta(days=19),'第二學期 1/3 退費基準日':timedelta(days=1),              '兒童清明補假':timedelta(days=1),'兒童節、民族掃墓節':timedelta(days=2),'學士班辦理109 學年住宿申請':timedelta(days=5),'第二學期繳交學分費暨語言設備使用費截止日':timedelta(days=1),              '第二學期期中考':timedelta(days=5),'第二學期申請棄修開始日':timedelta(days=1),'暑修上期登記':timedelta(days=2),'第二學期申請棄修、學士班提前畢業申請截止日':timedelta(days=1),              '學士班上網申請修習輔系或雙主修':timedelta(days=5),'全校校友返校日(停課)':timedelta(days=1),'校慶運動會(停課)':timedelta(days=2),'校慶':timedelta(days=1),              '第二學期輔系、雙主修放棄修習截止日':timedelta(days=1),'第二學期學雜費減免申請':timedelta(days=5),'畢業典禮':timedelta(days=1),'第二學期申請休學、學位考試截止日':timedelta(days=1),              '第二學期期末考':timedelta(days=7),'暑假開始':timedelta(days=1),'端午節':timedelta(days=1),'107-2 期末考週':timedelta(days=7)}#     !!!!!!!!!!!!!!!!!!!!!!
      
              if abc in event:#判斷是否有在字典裡
                    howmanydays=event2.get(abc)#在確定輸入的東西有在字典裡面之後就在event2裡面
                    selected_day=event.get(abc)#得到value

                    if howmanydays.days==1:#如果只有一天的話                !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          diff= selected_day-today#與今天的差
                          if diff.days>0:#以天數來印出兩個日期間的差距
                                print ('距離今天還有'+str(diff.days)+'天')
                          elif diff.days==0:
                                print('就在今天!!')
                          elif diff.days<0:
                                print('在'+str(-(diff.days))+'天前')
                    else:               #如果天數不只一天的話                                               !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          startDay=event.get(abc)#先宣告第一天                                              !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          endDay=event.get(abc)+howmanydays-timedelta(days=1)#最後一天是第一天日期加天數減一                !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          deltaS=startDay-today#第一天跟今天的差                                             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          deltaE=endDay-today#最後一天跟今天的差                                             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          if deltaS.days>0:#如果第一天比今天大代表還沒到                                        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                print ('距離今天還有'+str((startDay-today).days)+'天')
                          elif deltaE.days<0:#如果最後一天比今天小代表已經過了                                     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                print('在'+str(-(endDay-today).days)+'天前')
                          else:#剩下的情形夾在第一天跟最後一天之間 所以是正在進行                          
                                print('正在進行!!')
            
              elif abc=='結束':#結束
                    print('離開行事曆查詢程式')
                    print('')
                    break
              else:
                    print('沒有這個事件，請重新輸入')




                    
    elif menuselect == "4":
         
        class item():#一條消費的class
            def __init__(self,type,date,num):#初始化
                self.type = type
                self.date_accounting = date
                self.num = num
                               
            def print(self):#列印的function
                print(self.date_accounting,self.type,self.num)

        class pocket():#錢包的class
            def __init__(self):
                self.money = 0

            def deposit(self,amount):#存錢的function
                str_amount= str(amount)#先將amount轉為字串，用isidgit檢測是不是全部都是數字
                global account_flag
                if str_amount.isdigit():#如果全部都是數字則變為int
                    amount = int(amount)
                    self.money += amount
                    account_flag=account_flag+1 #令flag+1，使底下可以進行寫入步驟
                
                else:
                    print("輸入的金額不得為整數以外形式或負數!")
                    account_flag = 0
        

            def withdraw(self,amount):#花錢的function
                str_amount= str(amount)
                global account_flag
                if str_amount.isdigit():
                    amount = int(amount)       
                    self.money -= amount
                    account_flag=account_flag+1
            
                else:
                    print("輸入的金額不得為整數以外形式或負數!")
                    account_flag = 0
            

            def print(self): #顯示錢包剩於金額的function
                print("錢包剩下",self.money,"元")

        def main():#主程式
            p = pocket() #創造一個錢包的物件
            cost = [] #創造記帳的list
            fin = open('收支.txt','r')  #開啟檔案
            for line in fin:
                inputList = line.strip().split(' ')
                t = inputList[0]
                d = inputList[1]
                m = inputList[2]
                i = item(t,d,m)  #用剛剛的3個字串創造一個item
                cost.append(i)  #將此iem加到記帳的list裡面
            fin.close()   #關閉檔案
            list_date = ["1月1號","1月2號","1月3號","1月4號","1月5號","1月6號","1月7號","1月8號","1月9號","1月10號","1月11號","1月12號","1月13號","1月14號","1月15號","1月16號","1月17號","1月18號","1月19號","1月20號","1月21號","1月22號","1月23號","1月24號","1月25號","1月26號","1月27號","1月28號","1月29號","1月30號",
                         "2月1號","2月2號","2月3號","2月4號","2月5號","2月6號","2月7號","2月8號","2月9號","2月10號","2月11號","2月12號","2月13號","2月14號","2月15號","2月16號","2月17號","2月18號","2月19號","2月20號","2月21號","2月22號","2月23號","2月24號","2月25號","2月26號","2月27號","2月28號","2月29號",
                         "3月1號","3月2號","3月3號","3月4號","3月5號","3月6號","3月7號","3月8號","3月9號","3月10號","3月11號","3月12號","3月13號","3月14號","3月15號","3月16號","3月17號","3月18號","3月19號","3月20號","3月21號","3月22號","3月23號","3月24號","3月25號","3月26號","3月27號","3月28號","3月29號","3月30號","3月31號",
                         "4月1號","4月2號","4月3號","4月4號","4月5號","4月6號","4月7號","4月8號","4月9號","4月10號","4月11號","4月12號","4月13號","4月14號","4月15號","4月16號","4月17號","4月18號","4月19號","4月20號","4月21號","4月22號","4月23號","4月24號","4月25號","4月26號","4月27號","4月28號","4月29號","4月30號",
                         "5月1號","5月2號","5月3號","5月4號","5月5號","5月6號","5月7號","5月8號","5月9號","5月10號","5月11號","5月12號","5月13號","5月14號","5月15號","5月16號","5月17號","5月18號","5月19號","5月20號","5月21號","5月22號","5月23號","5月24號","5月25號","5月26號","5月27號","5月28號","5月29號","5月30號","5月31號",
                         "6月1號","6月2號","6月3號","6月4號","6月5號","6月6號","6月7號","6月8號","6月9號","6月10號","6月11號","6月12號","6月13號","6月14號","6月15號","6月16號","6月17號","6月18號","6月19號","6月20號","6月21號","6月22號","6月23號","6月24號","6月25號","6月26號","6月27號","6月28號","6月29號","6月30號",
                         "7月1號","7月2號","7月3號","7月4號","7月5號","7月6號","7月7號","7月8號","7月9號","7月10號","7月11號","7月12號","7月13號","7月14號","7月15號","7月16號","7月17號","7月18號","7月19號","7月20號","7月21號","7月22號","7月23號","7月24號","7月25號","7月26號","7月27號","7月28號","7月29號","7月30號","7月31號",
                         "8月1號","8月2號","8月3號","8月4號","8月5號","8月6號","8月7號","8月8號","8月9號","8月10號","8月11號","8月12號","8月13號","8月14號","8月15號","8月16號","8月17號","8月18號","8月19號","8月20號","8月21號","8月22號","8月23號","8月24號","8月25號","8月26號","8月27號","8月28號","8月29號","8月30號","8月31號",
                         "9月1號","9月2號","9月3號","9月4號","9月5號","9月6號","9月7號","9月8號","9月9號","9月10號","9月11號","9月12號","9月13號","9月14號","9月15號","9月16號","9月17號","9月18號","9月19號","9月20號","9月21號","9月22號","9月23號","9月24號","9月25號","9月26號","9月27號","9月28號","9月29號","9月30號",
                         "10月1號","10月2號","10月3號","10月4號","10月5號","10月6號","10月7號","10月8號","10月9號","10月10號","10月11號","10月12號","10月13號","10月14號","10月15號","10月16號","10月17號","10月18號","10月19號","10月20號","10月21號","10月22號","10月23號","10月24號","10月25號","10月26號","10月27號","10月28號","10月29號","10月30號","10月31號",
                         "11月1號","11月2號","11月3號","11月4號","11月5號","11月6號","11月7號","11月8號","11月9號","11月10號","11月11號","11月12號","11月13號","11月14號","11月15號","11月16號","11月17號","11月18號","11月19號","11月20號","11月21號","11月22號","11月23號","11月24號","11月25號","11月26號","11月27號","11月28號","11月29號","11月30號",
                         "12月1號","12月2號","12月3號","12月4號","12月5號","12月6號","12月7號","12月8號","12月9號","12月10號","12月11號","12月12號","12月13號","12月14號","12月15號","12月16號","12月17號","12月18號","12月19號","12月20號","12月21號","12月22號","12月23號","12月24號","12月25號","12月26號","12月27號","12月28號","12月29號","12月30號","12月31號",
                        ]     
            print("==========記帳小程式==========")
            global account_flag
            account_flag = 0
            while 1:
                print("輸入1顯示紀錄")
                print("輸入2紀錄新項目")
                print("輸入1或2以外的值則跳出")
                c1 = input()
                #--------------------------------------------------------
                if c1 == '1':#把讀取的設計改成「我只要讀文件裡面的就可以了」
                    f = open('收支.txt','r')
            
                    print(f.read())
                #----------------------------------------------------------
                elif c1 == '2':
                    print("輸入1來存錢")
                    print("輸入2來花錢^^")
                    c2 = input()
                    if c2 == '1':
                
                        print("來存錢!!")
                        d = input("請輸入日期，格式如「8月7號」的x月y號")
                        if list_date.count(d) == 0:#多一個if來檢測日期輸入是否合法
                            print("日期並不正確！")
                        else:
                            t = "存錢"
                            m = str(input("存入金額："))
                            i = item(d,t,m)
                            cost.append(i)
                            p.deposit(m)  #呼叫錢包裡存錢的function

                            print('\n')
                            if account_flag == 1:#檢測全域變數account_flag有沒有變成1，變成1才可以寫入外部檔案
                                fout = open('收支.txt','a')
                                outputStr = t + ' ' + d + ' ' + str(m) + '\n'
                                fout.write(outputStr)
                                fout.close()
                            account_flag = 0
                    elif c2 == '2':
                
                        d = input("請輸入日期，格式如「8月7號」的x月y號")
                        if list_date.count(d) == 0:
                            print("日期並不正確！")
                        else:
                            t = input("消費類型：")
                            m = str(input("消費金額："))
                            i = item(d,t,m)#創造一個新的item物件(一條新的消費)
                            cost.append(i)#把上面的物件加入記帳的list
                            p.withdraw(m)#呼叫錢包內花錢的function
                    
                            print('\n')
                            if account_flag == 1:
                                fout = open('收支.txt','a')#用append mode開啟檔案
                                outputStr = t + ' ' + d + ' ' + str(m) + '\n'#將三個字串合併，並用空格隔開
                                fout.write(outputStr)#寫入檔案
                                fout.close()
                            account_flag = 0
                    
                    else :
                        print("請輸入1或2")
                        print("")
                else :#輸入不是1跟2的東西來跳出(結束)
                    break
        if __name__ == '__main__':
            main()




         
    elif menuselect == "5":
        #---------------------------------------------------------------------
        cal=0#設一個flag
        while cal == 0:
          weight=str(input('請輸入你的體重(公斤)')) #使用者輸入體重
          try:
            weight = float(weight)
            cal=cal+1#如果可以轉為float則跳出
          except ValueError:
            print("請輸入數字")#如果不能轉float則要求再輸入一次

        #-------------------------------------------------------------
        print('') #空一行

        print('以下為運動種類:')

        di={'慢走':3.5,'快走':5.5,'慢跑':8.2,'快跑':12.7,'騎腳踏車':4,'瑜珈':3,'排球':3.6,'乒乓球':4.2,'棒壘球':4.7,'高爾夫':5,'直排輪':5.1,'羽毛球':5.1,'游泳':6.3,'籃球':6.3,'有氧舞蹈':6.8,'網球':6.6,'足球':7.7,'跳繩':8.4,'瑜珈':3,'滑雪':7.2,'拳擊':11.4} #各運動消耗熱量(大卡/公斤體重/時) 

        for key in di.keys(): print(format(key)) #列出所有運動種類

        print('') #空一行

        accumulated=0
        Cal=0
        while True:
          exercise=input('請輸入運動種類,如要停止請輸入結束，同時得知今天總共消耗熱量')

          if exercise=='結束':
              print('')
              print('本日總共總共消耗',accumulated,'大卡') #列印出總消耗熱量
              print('')
              break 
        #-----------------------------------------------------------------------------------  
          time=str(input('請輸入運動時數(小時)')) #使用者輸入運動時數
          #改為str
          try:
            time = float(time)
          except ValueError:
            Cal=Cal+1
          #測試能不能轉換為float，如果不行就立一個flag，在底下多一層if判斷flag有沒有立起，如果立起就意味著時間輸入了不合理值
          if Cal == 0:#如果沒立起flag
            time=float(time)
            if exercise=='慢走':
             print('慢走',time,'小時共消耗',di.get('慢走')*time*weight,'大卡')#計算慢走消耗大卡
             accumulated=accumulated+di.get('慢走')*time*weight #累加各消耗熱量
   
            elif exercise=='快走':
             print('快走',time,'小時共消耗',di.get('快走')*time*weight,'大卡')  #計算快走消耗大卡
             accumulated=accumulated+di.get('快走')*time*weight
    
            elif exercise=='慢跑':
             print('慢跑',time,'小時共消耗',di.get('慢跑')*time*weight,'大卡')  #計算慢跑消耗大卡
             accumulated=accumulated+di.get('慢跑')*time*weight
   
            elif exercise=='快跑':
             print('快跑',time,'小時共消耗',di.get('快跑')*time*weight,'大卡')  #計算快跑消耗大卡
             accumulated=accumulated+di.get('快跑')*time*weight
            elif exercise=='騎腳踏車':
             print('騎腳踏車',time,'小時共消耗',di.get('騎腳踏車')*time*weight,'大卡')  #計算騎腳踏車消耗大卡
             accumulated=accumulated+di.get('騎腳踏車')*time*weight
            elif exercise=='瑜珈':
             print('瑜珈',time,'小時共消耗',di.get('瑜珈')*time*weight,'大卡')  #計算瑜珈消耗大卡
             accumulated=accumulated+di.get('瑜珈')*time*weight
            elif exercise=='排球':
             print('排球',time,'小時共消耗',di.get('排球')*time*weight,'大卡')  #計算排球消耗大卡
             accumulated=accumulated+di.get('排球')*time*weight
            elif exercise=='乒乓球':
             print('乒乓球',time,'小時共消耗',di.get('乒乓球')*time*weight,'大卡')  #計算乒乓球消耗大卡
             accumulated=accumulated+di.get('乒乓球')*time*weight
            elif exercise=='棒壘球':
             print('棒壘球',time,'小時共消耗',di.get('棒壘球')*time*weight,'大卡')  #計算棒壘球消耗大卡
             accumulated=accumulated+di.get('棒壘球')*time*weight
            elif exercise=='高爾夫':
             print('高爾夫',time,'小時共消耗',di.get('高爾夫')*time*weight,'大卡')  #計算高爾夫消耗大卡
             accumulated=accumulated+di.get('高爾夫')*time*weight
            elif exercise=='直排輪':
             print('直排輪',time,'小時共消耗',di.get('直排輪')*time*weight,'大卡')  #計算直排輪消耗大卡
             accumulated=accumulated+di.get('直排輪')*time*weight
            elif exercise=='羽毛球':
             print('羽毛球',time,'小時共消耗',di.get('羽毛球')*time*weight,'大卡')  #計算羽毛球消耗大卡
             accumulated=accumulated+di.get('羽毛球')*time*weight
            elif exercise=='游泳':
             print('游泳',time,'小時共消耗',di.get('游泳')*time*weight,'大卡')  #計算游泳消耗大卡
             accumulated=accumulated+di.get('游泳')*time*weight
            elif exercise=='籃球':
             print('籃球',time,'小時共消耗',di.get('籃球')*time*weight,'大卡')  #計算籃球消耗大卡
             accumulated=accumulated+di.get('籃球')*time*weight
            elif exercise=='有氧舞蹈':
             print('有氧舞蹈',time,'小時共消耗',di.get('有氧舞蹈')*time*weight,'大卡')  #計算有氧舞蹈消耗大卡
             accumulated=accumulated+di.get('有氧舞蹈')*time*weight
            elif exercise=='網球':
             print('網球',time,'小時共消耗',di.get('網球')*time*weight,'大卡')  #計算網球消耗大卡
             accumulated=accumulated+di.get('網球')*time*weight
            elif exercise=='足球':
             print('足球',time,'小時共消耗',di.get('足球')*time*weight,'大卡')  #計算足球消耗大卡
             accumulated=accumulated+di.get('足球')*time*weight
            elif exercise=='跳繩':
             print('跳繩',time,'小時共消耗',di.get('跳繩')*time*weight,'大卡')  #計算跳繩消耗大卡
             accumulated=accumulated+di.get('跳繩')*time*weight
            elif exercise=='滑雪':
             print('滑雪',time,'小時共消耗',di.get('滑雪')*time*weight,'大卡')  #計算滑雪消耗大卡
             accumulated=accumulated+di.get('滑雪')*time*weight
            elif exercise=='拳擊':
             print('拳擊',time,'小時共消耗',di.get('拳擊')*time*weight,'大卡')  #計算拳擊消耗大卡
             accumulated=accumulated+di.get('拳擊')*time*weight
            else:
             print('運動種類輸入錯誤，請重新輸入')
          else:#如果立起flag
            print('時間輸入錯誤，請重新輸入')
            Cal = 0
 


    elif menuselect == "6":
        print("感謝你的使用")
        menuflag = 1
        print("===================================================")
    else:
        print("你輸入了錯誤的值！請重新選取")
